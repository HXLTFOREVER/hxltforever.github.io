<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Day72(bootstrap-table等)</title>
      <link href="/2020/05/13/day72-bootstrap-table-deng/"/>
      <url>/2020/05/13/day72-bootstrap-table-deng/</url>
      
        <content type="html"><![CDATA[<h3 id="1-项目后端模板修改"><a href="#1-项目后端模板修改" class="headerlink" title="1.项目后端模板修改"></a>1.项目后端模板修改</h3><p>kiaalap模板的修改,F12搜索自己不需要的div,进行增删</p><p>注意点:</p><p>1.访问用户列表或者其他时,系统管理的侧边栏和头顶都是不变的:</p><p>拆解成header.jsp和footer.jsp</p><pre class=" language-jsp"><code class="language-jsp"><%@ include file="commons/header.jsp"%><%@ include file="commons/footer.jsp"%></code></pre><p>2.路径问题</p><pre class=" language-jsp"><code class="language-jsp"><a href="${pageContext.servletContext.contextPath}/index.jsp"></code></pre><h3 id="2-用户分页查询"><a href="#2-用户分页查询" class="headerlink" title="2.用户分页查询"></a>2.用户分页查询</h3><h4 id="2-1UserDaoImpl"><a href="#2-1UserDaoImpl" class="headerlink" title="2.1UserDaoImpl"></a>2.1UserDaoImpl</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>TableData<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UserDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>DataUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>DbUtils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>PreparedStatement<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>ResultSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDao</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * select u_id id, u_name name, u_email email, u_sex gender, u_status status, u_phone phone, u_register_date registerDate     *  from t_user where 1 = 1 and u_name like ? and u_sex = ? and u_email like ? and u_register_date >= ? and u_register_date &lt;= ?     *   limit ?, ?     * 查询满足条件的当前页的数据     */</span>     <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> TableData<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">getPageData</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String sex<span class="token punctuation">,</span> String email<span class="token punctuation">,</span> Date beginRegisterDate<span class="token punctuation">,</span> Date endRegisterDate<span class="token punctuation">,</span> Integer currentPage<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        StringBuffer sql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"select u_id id, u_name name, u_email email, u_sex sex, u_status status, u_phone phone, u_register_date registerDate "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" from user where 1 = 1 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection conn <span class="token operator">=</span> DbUtils<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//得到分页的数据</span>         List<span class="token operator">&lt;</span>User<span class="token operator">></span> users <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>User<span class="token operator">></span><span class="token punctuation">)</span><span class="token function">commonQuery</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> email<span class="token punctuation">,</span> beginRegisterDate<span class="token punctuation">,</span> endRegisterDate<span class="token punctuation">,</span> currentPage<span class="token punctuation">,</span>  pageSize<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token function">getTotal</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> email<span class="token punctuation">,</span> beginRegisterDate<span class="token punctuation">,</span> endRegisterDate<span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span>         DbUtils<span class="token punctuation">.</span><span class="token function">colse</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> null<span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//连接最后关闭</span>         TableData<span class="token operator">&lt;</span>User<span class="token operator">></span> tableData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TableData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> tableData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 查询满足条件的总的数据量</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getTotal</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String sex<span class="token punctuation">,</span> String email<span class="token punctuation">,</span> Date beginRegisterDate<span class="token punctuation">,</span> Date endRegisterDate<span class="token punctuation">,</span> Connection conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>         StringBuffer sql <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">"select count(*) from user where 1 = 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         total <span class="token operator">=</span> <span class="token punctuation">(</span>Integer<span class="token punctuation">)</span><span class="token function">commonQuery</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> email<span class="token punctuation">,</span> beginRegisterDate<span class="token punctuation">,</span> endRegisterDate<span class="token punctuation">,</span> null<span class="token punctuation">,</span>  null<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> total<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 封装通用的查询     * @param conn                    连接     * @param sql                     不同sql     * @param name     * @param email     * @param beginRegisterDate     * @param endRegisterDate     * @param currentPage     * @param pageSize     * @param isPage                是否为分页，如果为分页传入true, 如果是查总数传入false     * @return     */</span>    <span class="token keyword">private</span> Object <span class="token function">commonQuery</span><span class="token punctuation">(</span>Connection conn<span class="token punctuation">,</span> StringBuffer sql<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> String sex<span class="token punctuation">,</span> String email<span class="token punctuation">,</span> Date beginRegisterDate<span class="token punctuation">,</span>                               Date endRegisterDate<span class="token punctuation">,</span> Integer currentPage<span class="token punctuation">,</span> Integer pageSize<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isPage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Object obj <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果不输入性别， 就不用加条件查询</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> name <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// "    "</span>            sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" and u_name like ? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"-1"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" and u_sex = ? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> email <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" and u_email like ? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> beginRegisterDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" and u_register_date >= ? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> endRegisterDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" and u_register_date &lt;= ? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>isPage<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">// 如果为分页，传入true, 就凭借分页的sql</span>            sql<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" limit ?, ? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            PreparedStatement ps <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> name <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// "    "</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"-1"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> sex<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> email <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> beginRegisterDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> beginRegisterDate<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>null <span class="token operator">!=</span> endRegisterDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> endRegisterDate<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>isPage<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> beginIndex <span class="token operator">=</span> <span class="token punctuation">(</span>currentPage <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> beginIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//分页开始索引位置</span>                ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 每页多少天数据</span>            <span class="token punctuation">}</span>            ResultSet rs <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 获取分页的数据与获取总数的方式不同。</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>isPage<span class="token punctuation">)</span> <span class="token punctuation">{</span>                obj <span class="token operator">=</span> DataUtils<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span>User<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 当前页的数据</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                obj <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            DbUtils<span class="token punctuation">.</span><span class="token function">colse</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span> ps<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> obj<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="2-2-bootstrap-table-插件"><a href="#2-2-bootstrap-table-插件" class="headerlink" title="2.2 bootstrap-table 插件"></a>2.2 bootstrap-table 插件</h4><h5 id="2-2-1-构建TableData类"><a href="#2-2-1-构建TableData类" class="headerlink" title="2.2.1 构建TableData类"></a>2.2.1 构建TableData类</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>commons<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 该类主要目的是配合 bootstrap-table插件类构建前端的分页数据。 * 因为bootstrap-table所需要的数据格式： *       { *           "total": 23, *           "rows": [{}, {}, {}] *       } * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TableData</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer total<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>T<span class="token operator">></span> rows<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">TableData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">TableData</span><span class="token punctuation">(</span>Integer total<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>T<span class="token operator">></span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> total<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rows <span class="token operator">=</span> rows<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> total<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTotal</span><span class="token punctuation">(</span>Integer total<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> total<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> rows<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRows</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>T<span class="token operator">></span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rows <span class="token operator">=</span> rows<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="2-2-2-bootstrap-table用法"><a href="#2-2-2-bootstrap-table用法" class="headerlink" title="2.2.2 bootstrap-table用法"></a>2.2.2 bootstrap-table用法</h5><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/vendor/jquery-1.12.4.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/calendar/moment.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/data-table/bootstrap-table.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/data-table/bootstrap-table-zh-CN.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--        额外加一列，写个按钮查看用户的地址信息。     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataTable<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table table-hover table-bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">/**     *     "rows": [         {          "email": "223@qq.com",          "id": 1,          "name": "张三",          "phone": "13000000000",          "registerDate": 1589353095000,          "sex": "F",          "status": 1        }         ],         "total": 1     }     */</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#dataTable'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bootstrapTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        url<span class="token punctuation">:</span> <span class="token string">'http://localhost:8081/my_cart_war_exploded/user'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//请求的地址</span>        method<span class="token punctuation">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//请求的方式</span>        <span class="token comment" spellcheck="true">// columns: 是定义列的信息， title表头信息, field表示从返回的json数据中取对应的属性的</span>        columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'id'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'ID'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// formatter要接收一个函数, 是对数据进行处理，该函数接收四个参数。</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'sex'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'性别'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> formatSex<span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'status'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'状态'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> formatStatus<span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'phone'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'电话'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'邮件'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>field<span class="token punctuation">:</span> <span class="token string">'registerDate'</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'注册日期'</span><span class="token punctuation">,</span> align<span class="token punctuation">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> formatRegisterDate<span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        pagination<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//表示意思是要分页, 默认是false</span>        <span class="token comment" spellcheck="true">// 在那边分页，值为 "client", "server", client的意思一次性将数据全部拿到，然后客户端分页。</span>        <span class="token comment" spellcheck="true">// server, 在服务器端分页, 每次查分页的数据的时候到服务器去请求。</span>        sidePagination<span class="token punctuation">:</span> <span class="token string">'server'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">/**     * 最终表格中显示的数据以该函数的返回值为准     * value是当前格子的值。     * row是当前行的数据。     * index是当前数据的索引。     */</span>    <span class="token keyword">function</span> <span class="token function">formatSex</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'F'</span> <span class="token operator">==</span> value <span class="token operator">?</span> <span class="token string">'女'</span> <span class="token punctuation">:</span> <span class="token string">'男'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 格式化状态</span>    <span class="token keyword">function</span> <span class="token function">formatStatus</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 1表示激活状态(要看数据库)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">'&lt;span class="label label-success">激活&lt;/span>'</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">'&lt;span class="label label-danger">未激活&lt;/span>'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//格式化注册日期</span>    <span class="token keyword">function</span> <span class="token function">formatRegisterDate</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 使用moment这个库来完成日期的格式化</span>        <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm:ss'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h5 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h5><p>请求方式为options 出现跨域问题 解决方式:写一个fliter过滤</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>qf<span class="token punctuation">.</span>filter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebFilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/*"</span><span class="token punctuation">,</span> filterName <span class="token operator">=</span> <span class="token string">"CrosFilter"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrosFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>        HttpServletResponse response <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletResponse<span class="token punctuation">)</span>servletResponse<span class="token punctuation">;</span>        <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>         <span class="token operator">*</span> 解决跨域 OPTIONS跨域         <span class="token operator">*</span><span class="token operator">/</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Methods"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span> <span class="token string">"Content-Type, x-requested-with, X-Custom-Header, HaiYi-Access-Token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"OPTIONS"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//</span>        <span class="token punctuation">}</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> javaweb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap-table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day71(bootstrap)</title>
      <link href="/2020/05/12/day71-bootstrap/"/>
      <url>/2020/05/12/day71-bootstrap/</url>
      
        <content type="html"><![CDATA[<h3 id="23-工具提示"><a href="#23-工具提示" class="headerlink" title="23.工具提示"></a>23.工具提示</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/bootstrap.min.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--        对于工具提示， data-toggle="tooltip"        title: 提示框中的信息。        data-placement： 控制提示框出现的方向。     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello world<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提示<span class="token punctuation">"</span></span> <span class="token attr-name">data-content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>这是一个提示信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// 处于对bootstrap性能的原因，这两个功能是选择性接入的(bootstrap没有强制性将这两个功能初始化)，</span>    <span class="token comment" spellcheck="true">// 所以我们要使用的时候必须要初始化。</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'button[data-toggle="tooltip"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'button[data-toggle="popover"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">popover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="24-警告框"><a href="#24-警告框" class="headerlink" title="24.警告框"></a>24.警告框</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; /&gt;    &lt;script src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;!--        可以实现警告框的手动关闭。     --&gt;    &lt;div class=&quot;alert alert-danger&quot;&gt;        这是一个警告框        &lt;button class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;            &lt;span&gt;&amp;times;&lt;/span&gt;        &lt;/button&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="25-按钮的状态"><a href="#25-按钮的状态" class="headerlink" title="25.按钮的状态"></a>25.按钮的状态</h3><pre><code>&lt;body&gt;    &lt;!-- data-loading-text当按钮不可点的时候显示文字。 --&gt;    &lt;button id=&quot;btn&quot; class=&quot;btn btn-primary&quot; data-loading-text=&quot;提交中...&quot; &gt;提交&lt;/button&gt;&lt;!--    &lt;input type=&quot;checkbox&quot; id=&quot;interests&quot;&gt; --&gt;&lt;/body&gt;&lt;script&gt;    /**  效果和下面是一样的    $(&#39;#btn&#39;).click(function() {})     */    /**  */    $(&#39;#btn&#39;).on(&#39;click&#39;, function() {        // button(&#39;loading&#39;) 表示按钮处于加载的过程中, loading是固定值        $(&#39;#btn&#39;).button(&#39;loading&#39;);        setTimeout(function() {            // 让按钮恢复原始的状态, reset是固定            $(&#39;#btn&#39;).button(&#39;reset&#39;);        }, 2000);    })    /**    $(&#39;#interests&#39;).on(&#39;change&#39;, function() {    });     */&lt;/script&gt;&lt;/html&gt;</code></pre><h3 id="26-折叠框"><a href="#26-折叠框" class="headerlink" title="26.折叠框"></a>26.折叠框</h3><pre><code>&lt;body&gt;    &lt;!--        控制折叠, 可以使用a和button标签。如果是a标签用 href; 如果是button是data-target，        但是两种方式都必须加上 data-toggle=&quot;collapse&quot;     --&gt;    &lt;a class=&quot;btn btn-danger&quot; href=&quot;#exampleCollapse&quot; data-toggle=&quot;collapse&quot;&gt;折叠&lt;/a&gt;    &lt;button class=&quot;btn btn-danger&quot; data-target=&quot;#exampleCollapse&quot; data-toggle=&quot;collapse&quot;&gt;折叠&lt;/button&gt;    &lt;div class=&quot;collapse&quot; id=&quot;exampleCollapse&quot;&gt;        这是一个折叠信息    &lt;/div&gt;&lt;/body&gt;</code></pre><h3 id="27-轮播图"><a href="#27-轮播图" class="headerlink" title="27.轮播图"></a>27.轮播图</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; /&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/font-awesome.css&quot; /&gt;    &lt;script src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;    &lt;style&gt;        .control-icon {            position: absolute;            top: 50%;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;carousel-example&quot; style=&quot;margin: 0 auto; width: 590px; height: 470px;&quot; class=&quot;carousel slide&quot; data-ride=&quot;carousel&quot;&gt;        &lt;!-- 小圆点 --&gt;        &lt;ol class=&quot;carousel-indicators&quot;&gt;            &lt;li data-target=&quot;#carousel-example&quot; data-slide-to=&quot;0&quot; class=&quot;active&quot;&gt;&lt;/li&gt;            &lt;li data-target=&quot;#carousel-example&quot; data-slide-to=&quot;1&quot;&gt;&lt;/li&gt;            &lt;li data-target=&quot;#carousel-example&quot; data-slide-to=&quot;2&quot;&gt;&lt;/li&gt;        &lt;/ol&gt;        &lt;!-- 放置图片 --&gt;        &lt;div class=&quot;carousel-inner&quot;&gt;            &lt;!-- 展示每张图片以及文字 --&gt;            &lt;div class=&quot;item active&quot;&gt;                &lt;img width=&quot;590px&quot; height=&quot;470px&quot; src=&quot;images/image1.jpg&quot;&gt;            &lt;/div&gt;            &lt;div class=&quot;item&quot;&gt;                &lt;img width=&quot;590px&quot; height=&quot;470px&quot; src=&quot;images/image2.jpg&quot;&gt;                &lt;div class=&quot;carousel-caption&quot;&gt;                    &lt;h3&gt;图片的描述信息&lt;/h3&gt;                    &lt;p&gt;展示每张图片以及文字 展示每张图片以及文字 展示每张图片 &lt;/p&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;item&quot;&gt;                &lt;img width=&quot;590px&quot; height=&quot;470px&quot; src=&quot;images/image3.jpg&quot;&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;!-- 左边的箭头 --&gt;        &lt;a class=&quot;left carousel-control&quot; href=&quot;#carousel-example&quot; data-slide=&quot;prev&quot;&gt;            &lt;span class=&quot;fa fa-chevron-left control-icon&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;/span&gt;        &lt;/a&gt;        &lt;!-- 右边的箭头 --&gt;        &lt;a class=&quot;right carousel-control&quot; href=&quot;#carousel-example&quot; data-slide=&quot;next&quot;&gt;            &lt;span class=&quot;fa fa-chevron-right control-icon&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;sr-only&quot;&gt;Next&lt;/span&gt;        &lt;/a&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> javaweb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/12/hello-world/"/>
      <url>/2020/05/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
